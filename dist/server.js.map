{"version":3,"sources":["../src/server.js"],"names":["app","use","restrictAccess","main","listen","console","log","req","res","next","setHeader"],"mappings":"AAAA;;AAEA,4B;AACA,wB;AACA,4B;AACA,4B;AACA,kC;;;AAGA,kC;AACA,gC;;AAEA;AAJA;AAMA,IAAMA,MAAI,wBAAV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAA,IAAIC,GAAJ,CAAQ,sBAAO,cAAP,CAAR;AACA;AACA;AACAD,IAAIC,GAAJ,CAAQ,QAAR,EAAiBC,cAAjB;AACID,GADJ,CACQ,QADR,EACiB,gBAAME,IADvB;;AAGA;AACAH,IAAII,MAAJ,CAAW,MAAX,EAAkB,YAAU;AACxBC,YAAQC,GAAR,CAAY,+BAAZ;AACH,CAFD;;;;AAMA;AACA,SAASJ,cAAT,CAAwBK,GAAxB,EAA4BC,GAA5B,EAAgCC,IAAhC,EAAqC;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEAD,QAAIE,SAAJ,CAAc,8BAAd,EAA8C,GAA9C,EAViC,CAUoB;AACrD;AACAF,QAAIE,SAAJ,CAAc,cAAd,EAA6B,yBAA7B;AACAD;AACA;AACA;AACA;AACA;;AAEH","file":"server.js","sourcesContent":["'use strict'\r\n\r\nimport http from 'http';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\nimport mime from 'mime';\r\nimport connect from 'connect';\r\n\r\n// 业务逻辑\r\nimport logger from './logger'\r\nimport admin from './admin'\r\n\r\n//connect中间件组件是一个函数，他拦截HTTP服务器提供得请求和相应对象，执行逻辑然后或者结束响应，或者把它传递给下一个中间件组件。Connect用分排期把中间件'连接'在一起\r\n\r\nconst app=connect();\r\n// app.all('*', function(req, res, next) {\r\n//     res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n//     res.header(\"Access-Control-Allow-Headers\", \"X-Requested-With\");\r\n//     res.header(\"Access-Control-Allow-Methods\", \"PUT,POST,GET,DELETE,OPTIONS\");\r\n//     res.header(\"X-Powered-By\", ' 3.2.1');\r\n//     res.header(\"Content-Type\", \"application/json;charset=utf-8\");\r\n//     next();\r\n// });\r\n\r\n// 日志中间件\r\napp.use(logger(':method :url'));\r\n// app.use('/',restrict);\r\n// admin 服务器挂载\r\napp.use('/admin',restrictAccess) \r\n   .use('/admin',admin.main);\r\n\r\n// 服务器启动\r\napp.listen('3006',function(){\r\n    console.log('server listening on port 3006')\r\n})\r\n\r\n\r\n\r\n// 登录认证中间件  确保访问页面得是有效用户\r\nfunction restrictAccess(req,res,next){\r\n    // var authorization=req.headers.authorization;\r\n    // if(!authorization)return next(new Error('Unauthorized'));\r\n\r\n    // var parts=authorization.split('');\r\n    // var scheme=parts[0];\r\n    // var auth=new Buffer(parts[1],'base64').toString().split(':');\r\n    // var user=auth[0];\r\n    // var pass=auth[1];  \r\n    \r\n    res.setHeader(\"Access-Control-Allow-Origins\", \"*\");  // 允许跨域\r\n    //告诉浏览器编码方式  \r\n    res.setHeader(\"Content-Type\",\"text/html;charset=UTF-8\" ); \r\n    next();\r\n    // authenticateWithDataBase(user,pass,function(err){\r\n    //      if(err) return next(err);\r\n    //      next();\r\n    //  });\r\n\r\n}"]}